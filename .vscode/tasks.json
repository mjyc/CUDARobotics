{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Bazel: Generate compile_commands.json",
        "type": "shell",
        "command": "bazel-compdb",
        "problemMatcher": [],
      },
      {
        "label": "Bazel: Build",
        "type": "shell",
        "command": "CXX=clang++ bazel build ${relativeFileDirname}:${fileBasenameNoExtension}",
        "dependsOn": [
          "Bazel: Generate compile_commands.json"
        ],
        "group": {
          "kind": "build",
          "isDefault": true,
        },
      },
      {
        "label": "Bazel: Build (debug)",
        "type": "shell",
        "command": "CXX=clang++ bazel build -c dbg ${relativeFileDirname}:${fileBasenameNoExtension}",
        "dependsOn": [
          "Bazel: Generate compile_commands.json"
        ],
      },
      {
        "label": "Bazel: Run",
        "type": "shell",
        "command": "CXX=clang++ bazel run ${relativeFileDirname}:${fileBasenameNoExtension}",
        "problemMatcher": [],
      },
      {
        "label": "Bazel: Run (debug)",
        "type": "shell",
        "command": "CXX=clang++ bazel run -c dbg ${relativeFileDirname}:${fileBasenameNoExtension}",
        "problemMatcher": [],
      },
      {
        "label": "Bazel: Run (opt)",
        "type": "shell",
        "command": "CXX=clang++ bazel run -c opt ${relativeFileDirname}:${fileBasenameNoExtension}",
        "problemMatcher": [],
      },
      {
        "label": "iBazel: Run",
        "type": "shell",
        "command": "CXX=clang++ ibazel run ${relativeFileDirname}:${fileBasenameNoExtension}",
        "problemMatcher": [],
        "dependsOn": [
          "Bazel: Generate compile_commands.json"
        ],
      },
      {
        "label": "iBazel: Generate and Open Plot (use this with plot.py)",
        "type": "shell",
        "command": "bash",
        "args": [
            "-c",
            "CXX=clang++ ibazel -run_command_after_success=\"code $(bazel info bazel-bin)/${relativeFileDirname}/${fileBasenameNoExtension}.png\" build ${relativeFileDirname}:generate_plot"
        ],
        "problemMatcher": [],
        "dependsOn": [
          "Bazel: Generate compile_commands.json"
        ],
      },
      {
        "label": "Open Generated Plot (use this with plot.py)",
        "type": "shell",
        "command": "code $(bazel info bazel-bin)/${relativeFileDirname}/${fileBasenameNoExtension}.png",
        "problemMatcher": []
      }
    ]
}